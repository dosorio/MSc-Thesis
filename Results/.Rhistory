healthy <- levelplot(healthy,col.regions=rgb.palette(120))
healthy <- as.data.frame(matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id)))
healthy <- mCapabilities(Ec_core)
healthy <- as.data.frame(matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id)))
healthy <- levelplot(healthy)
healthy
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
healthy <- levelplot(healthy)
healthy
healthy <- levelplot(healthy,cex=0)
healthy
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
levelplot(healthy)
healthy <- levelplot(healthy,aspect="iso", scales=list(x=list(rot=90)),
main="Correlation Matrix", col.regions=rgb.palette(120),
cuts=100, at=seq(0,1,0.01))
rgb.palette <- colorRampPalette(c("blue", "yellow"), space = "rgb")
healthy <- levelplot(healthy,aspect="iso", scales=list(x=list(rot=90)),
main="Correlation Matrix", col.regions=rgb.palette(120),
cuts=100, at=seq(0,1,0.01))
healthy
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
rgb.palette <- colorRampPalette(c("blue", "yellow"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(120),xlab="Reactant",ylab="Product"
cuts=100, at=seq(0,1,0.01))
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(120),xlab="Reactant",ylab="Product",
cuts=100, at=seq(0,1,0.01))
healthyplot
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(120),xlab="Reactant",ylab="Product", at=seq(0,1,0.01))
healthyplot
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(1000),xlab="Reactant",ylab="Product", at=seq(0,1,0.01))
healthyplot
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(1000),xlab="Reactant",ylab="Product")
healthyplot
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product")
healthyplot
rgb.palette <- colorRampPalette(c("white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product")
healthyplot
library(gridExtra)
grid.arrange(healthyplot,healthyplot,healthyplot,ncol=3)
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
healthyplot
rgb.palette <- colorRampPalette(c("gray30","white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
healthyplot
grid.arrange(healthyplot,healthyplot,healthyplot,ncol=3)
healthyplot
rgb.palette <- colorRampPalette(c("white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
healthyplot
findExchReact(Ec_core)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"]
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -1
inflammated <-mCapabilities(Ec_core)
inflammated <- matrix(unlist(inflammated),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
inflammatedplot <- levelplot(inflammated, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
inflammatedplot
healthyplot
inflammatedplot
grid.arrange(healthyplot,inflammatedplot,healthyplot,ncol=3)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -8
tibolone <-mCapabilities(Ec_core)
tibolone <- matrix(unlist(tibolone),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
tiboloneplot <- levelplot(tibolone, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
tiboloneplot
grid.arrange(healthyplot,inflammatedplot,tiboloneplot,ncol=3)
healthy==0
healthy==0 && inflammated!=0
healthy==0 & inflammated!=0
healthy[healthy==0 & inflammated!=0]
healthy[healthy==0 & inflammated!=0] <- inflammated[healthy==0 & inflammated!=0]
healthy[healthy==0 & inflammated!=0]
inflammated[healthy==0 & inflammated!=0]
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
inflammated <-mCapabilities(Ec_core)
healthy[healthy==0 & inflammated!=0]
inflammated[healthy==0 & inflammated!=0]
length(healthy[healthy==0 & inflammated!=0])
length(inflammated[healthy==0 & inflammated!=0])
healthy[healthy==0 & inflammated!=0] <- inflammated[healthy==0 & inflammated!=0]
(inflammated/healthy)-1
h2i <- (inflammated/healthy)-1
is.na(h2i)
h2i[is.na(h2i)]
h2i[is.na(h2i)] <- 0
is.infinite(h2i)
h2i[is.infinite(h2i)]
levelplot(h2i)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
h2i <- (inflammated - healthy)/healthy
h2i[is.na(h2i)] <- 0
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
data("Ec_core")
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
rgb.palette <- colorRampPalette(c("white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -1
inflammated <-mCapabilities(Ec_core)
inflammated <- matrix(unlist(inflammated),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
inflammatedplot <- levelplot(inflammated, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -8
tibolone <-mCapabilities(Ec_core)
tibolone <- matrix(unlist(tibolone),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
tiboloneplot <- levelplot(tibolone, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
healthy[healthy==0 & inflammated!=0] <- inflammated[healthy==0 & inflammated!=0]
h2i <- (inflammated - healthy)/healthy
h2i[is.na(h2i)] <- 0
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
h2i
rgb.palette <- colorRampPalette(c("red","white", "blue"), space = "rgb")
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(1000),xlab="Reactant",ylab="Product",cex=0.5)
h2i
round(h2i,3)
h2i <- round(h2i,3)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(1000),xlab="Reactant",ylab="Product",cex=0.5)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(10000),xlab="Reactant",ylab="Product",cex=0.5)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100000),xlab="Reactant",ylab="Product",cex=0.5)
heatmap(h2i)
h2i["atp[c]",]
levelplot(dist(h2i), scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100000),xlab="Reactant",ylab="Product",cex=0.5)
dist(h2i)
library(gplots)
heatmap.2(h2i)
heatmap.2(h2i,scale = "row")
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
h2i <- heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
grid.arrange(h2i,h2i,h2i,ncol=3)
par(mfcol=c(1,3))
h2i <- heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
h2i
plot(h2i)
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
h2i <- (inflammated - healthy)/abs(healthy)
h2i[is.na(h2i)] <- 0
par(mfcol=c(1,3))
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
heatmap.2(h2i,scale = "col",dendrogram='none', Rowv=FALSE,trace='none')
heatmap.2(h2i,scale = "col",dendrogram='none',trace='none')
data("Ec_core")
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
rgb.palette <- colorRampPalette(c("red","white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -1
inflammated <-mCapabilities(Ec_core)
inflammated <- matrix(unlist(inflammated),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
inflammatedplot <- levelplot(inflammated, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -8
tibolone <-mCapabilities(Ec_core)
tibolone <- matrix(unlist(tibolone),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
tiboloneplot <- levelplot(tibolone, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
pos <- (healthy==0 & inflammated!=0)
healthy[pos] <- inflammated[pos]
inflammated[pos] <- 0
h2i <- (inflammated - healthy)/abs(healthy)
h2i[is.na(h2i)] <- 0
par(mfcol=c(1,3))
heatmap.2(h2i,scale = "col",dendrogram='none',trace='none')
heatmap.2(h2i,scale = "row",dendrogram='none',trace='none')
data("Ec_core")
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -1
inflammated <-mCapabilities(Ec_core)
inflammated <- matrix(unlist(inflammated),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
pos <- (inflammated==0 & tibolone!=0)
pos
inflammated[pos] <- tibolone[pos]
tibolone[pos] <- 0
h2i <- (tibolone - inflammated)/abs(inflammated)
h2i[is.na(h2i)] <- 0
heatmap.2(h2i,scale = "row",dendrogram='none',trace='none')
mCapabilities <- function(model,fileName){
wFile <- file(filename)
foreach(i=model@met_id) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
return(optimizeProb(model)@lp_obj)
}
}
}
library(foreach)
library(doMC)
library(sybilSBML)
registerDoMC(4)
data("Ec_core")
mCapabilities(Ec_core,"test.txt")
mCapabilities(Ec_core,fileName = "test.txt")
mCapabilities <- function(model,fileName){
wFile <- file(fileName)
foreach(i=model@met_id) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
return(optimizeProb(model)@lp_obj)
}
}
}
mCapabilities(Ec_core,fileName = "test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
cat(optimizeProb(model)@lp_obj,file = fileName,append = TRUE)
}
}
}
mCapabilities(Ec_core,"test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
cat(optimizeProb(model)@lp_obj,file = fileName,sep = "\t", append = TRUE)
}
cat("\n",file = fileName,append = TRUE)
}
}
mCapabilities(Ec_core,"test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id[1]) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
cat(optimizeProb(model)@lp_obj,file = fileName,sep = "\t", append = TRUE)
}
cat("\n",file = fileName,append = TRUE)
}
}
mCapabilities(Ec_core,"test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id[1]) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
cat(optimizeProb(model)@lp_obj,file = fileName,sep = "\n", append = TRUE)
}
cat("\n",file = fileName,append = TRUE)
}
}
mCapabilities(Ec_core,"test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id[1]) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
value <- optimizeProb(model)@lp_obj
cat(value,file = fileName,sep = "\n", append = TRUE)
}
cat("\n",file = fileName,append = TRUE)
}
}
mCapabilities(Ec_core,"test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id[1]) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dop% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
value <- optimizeProb(model)@lp_obj
cat(value,file = fileName,sep = "\n", append = TRUE)
}
cat("\n",file = fileName,append = TRUE)
}
}
mCapabilities(Ec_core,"test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id[1]) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %do% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
value <- optimizeProb(model)@lp_obj
cat(value,file = fileName,sep = "\n", append = TRUE)
}
cat("\n",file = fileName,append = TRUE)
}
}
mCapabilities(Ec_core,"test.txt")
mCapabilities(Ec_core,"test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id[1]) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %do% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
value <- optimizeProb(model)@lp_obj
cat(value,file = fileName,sep = "\t", append = TRUE)
}
cat("\n",file = fileName,append = TRUE)
}
}
mCapabilities(Ec_core,"test.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id[1]) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %do% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
value <- optimizeProb(model)@lp_obj
cat(value,file = fileName,sep = ";", append = TRUE)
}
cat("\n",file = fileName,append = TRUE)
}
}
mCapabilities(Ec_core,"test.txt")
healthy <- read.csv("~/Desktop/healthy.txt", header=FALSE, sep=";")
View(healthy)
dim(healthy)
healthy <- read.csv("~/Desktop/healthy.txt", header=FALSE, sep=";")
View(healthy)
dim(healthy)
healthy <- read.csv("~/Desktop/healthy.txt", header=FALSE, sep=";")
View(healthy)
s <- scan("Desktop/healthy.txt")
s <- scan("Desktop/healthy.txt",sep = ";")
s
mCapabilities <- function(model,fileName){
foreach(i=model@met_id) %do% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
value <- optimizeProb(model)@lp_obj
cat(value,file = fileName,sep = "\n", append = TRUE)
}
}
}
healthy <- readSBMLmod("matureAstrocyte.xml")
setwd("~/Documents/masterThesis/Results")
healthy <- readSBMLmod("matureAstrocyte.xml")
mCapabilities(healthy,"healthy.txt")
mCapabilities <- function(model,fileName){
foreach(i=model@met_id) %do% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
value <- optimizeProb(model)@lp_obj
cat(paste0(value,";"),file = fileName,sep = "\n", append = TRUE)
}
}
}
mCapabilities <- function(model,fileName){
foreach(i=model@met_id[1:2]) %do% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id[1:10]) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
value <- optimizeProb(model)@lp_obj
cat(paste0(value,";"),file = fileName,sep = "\n", append = TRUE)
}
}
}
mCapabilities(healthy,"healthy.txt")
healthy <- read.delim("~/Desktop/healthy.txt", header=FALSE)
View(healthy)
healthy <- read.delim("~/Desktop/healthy.txt", header=FALSE)
View(healthy)
healthy <- read.delim("~/Desktop/healthy.txt", header=FALSE)
View(healthy)
levelplot(healthy)
levelplot(as.matrix(healthy))
heatmap(healthy)
is.numeric(healthy)
class(healthy)
h <- as.matrix(healthy)
heatmap(h)
heatmap(h,scale = "row")
View(h)
