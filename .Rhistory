abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(25,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
par(mfcol=c(2,1))
data <- runif(30,0,10)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
data2 <- runif(30,summary(data)[4],summary(data)[5])
data2[round(runif(30,1,30))] <- summary(data)[5]
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
pdf("Documents/masterThesis/Slides/Figures/MChanges.pdf",width = 5,height = 6.5)
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
dev.off()
par(mfcol=c(2,1))
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
dev.off()
pdf("Documents/masterThesis/Slides/Figures/MChanges.pdf",width = 5,height = 6.5)
par(mfcol=c(2,1))
barplot(data,ylim = c(0,10),col=ifelse(data>summary(data)[5],"firebrick1","gray80"),ylab = "Objective Function Value",main="Pro-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
barplot(data2,ylim = c(0,10),col=ifelse(data2<summary(data)[5],"dodgerblue","gray80"),ylab = "Objective Function Value",main="Anti-Inflammatory Proteins")
abline(h=summary(data)[6]-0.1,col="blue")
abline(h=summary(data)[5],col="red")
dev.off()
library(foreach)
library(doMC)
library(sybilSBML)
registerDoMC(32)
mCapabilities <- function(model){
foreach(i=model@met_id) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
return(optimizeProb(model)@lp_obj)
}
}
}
library(foreach)
library(doMC)
library(sybilSBML)
registerDoMC(4)
mCapabilities <- function(model){
foreach(i=model@met_id) %dopar% {
reactionNumber <- (model@met_id == i)
print(grep("TRUE",reactionNumber))
foreach(j=model@met_id) %dopar% {
model@obj_coef <- rep(0,model@react_num)
model <- addReact(model = model,
id = "MC",
Scoef = c(-1,1),
met = c(i,j),
reversible = FALSE,
ub = 1000,
obj = 1)
return(optimizeProb(model)@lp_obj)
}
}
}
data("Ec_core")
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num)
levelplot(as.data.frame(healthy))
levelplot(healthy)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
healthy <- levelplot(healthy,aspect = "fill")
healthy
par(las=2)
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
healthy <- levelplot(healthy,aspect = "fill")
healthy
healthy <- levelplot(healthy,scales=list(x=list(rot=90))
healthy
healthy <- levelplot(healthy,scales=list(x=list(rot=90)))
healthy <- levelplot(healthy,col.regions=rgb.palette(120))
library(lattice)
healthy <- levelplot(healthy,col.regions=rgb.palette(120))
healthy <- as.data.frame(matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id)))
healthy <- levelplot(healthy,col.regions=rgb.palette(120))
healthy <- as.data.frame(matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id)))
healthy <- mCapabilities(Ec_core)
healthy <- as.data.frame(matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id)))
healthy <- levelplot(healthy)
healthy
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
healthy <- levelplot(healthy)
healthy
healthy <- levelplot(healthy,cex=0)
healthy
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
levelplot(healthy)
healthy <- levelplot(healthy,aspect="iso", scales=list(x=list(rot=90)),
main="Correlation Matrix", col.regions=rgb.palette(120),
cuts=100, at=seq(0,1,0.01))
rgb.palette <- colorRampPalette(c("blue", "yellow"), space = "rgb")
healthy <- levelplot(healthy,aspect="iso", scales=list(x=list(rot=90)),
main="Correlation Matrix", col.regions=rgb.palette(120),
cuts=100, at=seq(0,1,0.01))
healthy
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
rgb.palette <- colorRampPalette(c("blue", "yellow"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(120),xlab="Reactant",ylab="Product"
cuts=100, at=seq(0,1,0.01))
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(120),xlab="Reactant",ylab="Product",
cuts=100, at=seq(0,1,0.01))
healthyplot
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(120),xlab="Reactant",ylab="Product", at=seq(0,1,0.01))
healthyplot
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(1000),xlab="Reactant",ylab="Product", at=seq(0,1,0.01))
healthyplot
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(1000),xlab="Reactant",ylab="Product")
healthyplot
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product")
healthyplot
rgb.palette <- colorRampPalette(c("white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product")
healthyplot
library(gridExtra)
grid.arrange(healthyplot,healthyplot,healthyplot,ncol=3)
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
healthyplot
rgb.palette <- colorRampPalette(c("gray30","white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
healthyplot
grid.arrange(healthyplot,healthyplot,healthyplot,ncol=3)
healthyplot
rgb.palette <- colorRampPalette(c("white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
healthyplot
findExchReact(Ec_core)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"]
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -1
inflammated <-mCapabilities(Ec_core)
inflammated <- matrix(unlist(inflammated),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
inflammatedplot <- levelplot(inflammated, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
inflammatedplot
healthyplot
inflammatedplot
grid.arrange(healthyplot,inflammatedplot,healthyplot,ncol=3)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -8
tibolone <-mCapabilities(Ec_core)
tibolone <- matrix(unlist(tibolone),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
tiboloneplot <- levelplot(tibolone, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
tiboloneplot
grid.arrange(healthyplot,inflammatedplot,tiboloneplot,ncol=3)
healthy==0
healthy==0 && inflammated!=0
healthy==0 & inflammated!=0
healthy[healthy==0 & inflammated!=0]
healthy[healthy==0 & inflammated!=0] <- inflammated[healthy==0 & inflammated!=0]
healthy[healthy==0 & inflammated!=0]
inflammated[healthy==0 & inflammated!=0]
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
inflammated <-mCapabilities(Ec_core)
healthy[healthy==0 & inflammated!=0]
inflammated[healthy==0 & inflammated!=0]
length(healthy[healthy==0 & inflammated!=0])
length(inflammated[healthy==0 & inflammated!=0])
healthy[healthy==0 & inflammated!=0] <- inflammated[healthy==0 & inflammated!=0]
(inflammated/healthy)-1
h2i <- (inflammated/healthy)-1
is.na(h2i)
h2i[is.na(h2i)]
h2i[is.na(h2i)] <- 0
is.infinite(h2i)
h2i[is.infinite(h2i)]
levelplot(h2i)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
h2i <- (inflammated - healthy)/healthy
h2i[is.na(h2i)] <- 0
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
data("Ec_core")
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
rgb.palette <- colorRampPalette(c("white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -1
inflammated <-mCapabilities(Ec_core)
inflammated <- matrix(unlist(inflammated),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
inflammatedplot <- levelplot(inflammated, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -8
tibolone <-mCapabilities(Ec_core)
tibolone <- matrix(unlist(tibolone),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
tiboloneplot <- levelplot(tibolone, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
healthy[healthy==0 & inflammated!=0] <- inflammated[healthy==0 & inflammated!=0]
h2i <- (inflammated - healthy)/healthy
h2i[is.na(h2i)] <- 0
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
h2i
rgb.palette <- colorRampPalette(c("red","white", "blue"), space = "rgb")
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(1000),xlab="Reactant",ylab="Product",cex=0.5)
h2i
round(h2i,3)
h2i <- round(h2i,3)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(1000),xlab="Reactant",ylab="Product",cex=0.5)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(10000),xlab="Reactant",ylab="Product",cex=0.5)
levelplot(h2i, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100000),xlab="Reactant",ylab="Product",cex=0.5)
heatmap(h2i)
h2i["atp[c]",]
levelplot(dist(h2i), scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100000),xlab="Reactant",ylab="Product",cex=0.5)
dist(h2i)
library(gplots)
heatmap.2(h2i)
heatmap.2(h2i,scale = "row")
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE, Colv=FALSE,trace='none')
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
h2i <- heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
grid.arrange(h2i,h2i,h2i,ncol=3)
par(mfcol=c(1,3))
h2i <- heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
h2i
plot(h2i)
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
h2i <- (inflammated - healthy)/abs(healthy)
h2i[is.na(h2i)] <- 0
par(mfcol=c(1,3))
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
heatmap.2(h2i,scale = "row",dendrogram='none', Rowv=FALSE,trace='none')
heatmap.2(h2i,scale = "col",dendrogram='none', Rowv=FALSE,trace='none')
heatmap.2(h2i,scale = "col",dendrogram='none',trace='none')
data("Ec_core")
healthy <- mCapabilities(Ec_core)
healthy <- matrix(unlist(healthy),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
rgb.palette <- colorRampPalette(c("red","white", "blue"), space = "rgb")
healthyplot <- levelplot(healthy, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -1
inflammated <-mCapabilities(Ec_core)
inflammated <- matrix(unlist(inflammated),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
inflammatedplot <- levelplot(inflammated, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -8
tibolone <-mCapabilities(Ec_core)
tibolone <- matrix(unlist(tibolone),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
tiboloneplot <- levelplot(tibolone, scales=list(x=list(rot=90)),
main="Metabolites", col.regions=rgb.palette(100),xlab="Reactant",ylab="Product",cex=0.5)
pos <- (healthy==0 & inflammated!=0)
healthy[pos] <- inflammated[pos]
inflammated[pos] <- 0
h2i <- (inflammated - healthy)/abs(healthy)
h2i[is.na(h2i)] <- 0
par(mfcol=c(1,3))
heatmap.2(h2i,scale = "col",dendrogram='none',trace='none')
heatmap.2(h2i,scale = "row",dendrogram='none',trace='none')
data("Ec_core")
lowbnd(Ec_core)[Ec_core@react_id=="EX_glc(e)"] <- -1
inflammated <-mCapabilities(Ec_core)
inflammated <- matrix(unlist(inflammated),nrow = Ec_core@met_num,dimnames = list(Ec_core@met_id,Ec_core@met_id))
pos <- (inflammated==0 & tibolone!=0)
pos
inflammated[pos] <- tibolone[pos]
tibolone[pos] <- 0
h2i <- (tibolone - inflammated)/abs(inflammated)
h2i[is.na(h2i)] <- 0
heatmap.2(h2i,scale = "row",dendrogram='none',trace='none')
matureAstrocyte_Model <- readSBMLmod("Results/matureAstrocyte.xml")
library(sybilSBML)
library(minval)
library(exp2flux)
matureAstrocyte_Model <- readSBMLmod("Results/matureAstrocyte.xml")
setwd("~/Documents/masterThesis")
matureAstrocyte_Model <- readSBMLmod("Results/matureAstrocyte.xml")
# Adding Palmitate
lowbnd(matureAstrocyte_Model)[react_id(matureAstrocyte_Model) == 'EX_hdca(e)'] <- -0.208
uppbnd(matureAstrocyte_Model)[react_id(matureAstrocyte_Model) == 'EX_hdca(e)'] <- -0.208
# ProInflamatoryReactions
healthy <- readSBMLmod("Results/matureAstrocyte.xml")
inflammated <- matureAstrocyte_Model
fD <- fluxDifferences(healthy,inflammated,0)
fD <- fD[fD[,3]!=0,]
GPR <- NULL
for (i in rownames(fD)){
GPR <- c(GPR,healthy@gpr[healthy@react_id%in%i])
}
fD <- fD[nchar(GPR)>0,]
OF <- NULL
for(reaction in rownames(fD)){
lb <- lowbnd(inflammated)[react_id(inflammated) == reaction]
ub <- uppbnd(inflammated)[react_id(inflammated) == reaction]
lowbnd(inflammated)[react_id(inflammated) == reaction] <- 0
uppbnd(inflammated)[react_id(inflammated) == reaction] <- 0
OF <- c(OF,optimizeProb(inflammated)@lp_obj)
lowbnd(inflammated)[react_id(inflammated) == reaction] <- lb
uppbnd(inflammated)[react_id(inflammated) == reaction] <- ub
}
OF
barplot(OF)
OF<optimizeProb(inflammated)@lp_obj
OF[OF<optimizeProb(inflammated)@lp_obj]
fD[OF<optimizeProb(inflammated)@lp_obj]
fD[OF<optimizeProb(inflammated)@lp_obj,]
OF<optimizeProb(inflammated)@lp_obj
table(OF<optimizeProb(inflammated)@lp_obj)
OF<optimizeProb(inflammated)@lp_obj & OF>0
table(OF<optimizeProb(inflammated)@lp_obj & OF>0)
fD[OF<optimizeProb(inflammated)@lp_obj & OF>0]
fD[OF<optimizeProb(inflammated)@lp_obj & OF>0,]
sort(fD[OF<optimizeProb(inflammated)@lp_obj & OF>0,])
fD[OF<optimizeProb(inflammated)@lp_obj & OF>0,]
fD[OF<optimizeProb(inflammated)@lp_obj & OF>0,]
Ai <- fD[OF<optimizeProb(inflammated)@lp_obj & OF>0,]
Ai[,3]
sort(Ai[,3])
sort(abs(Ai[,3]))
sort(abs(Ai[,3]))
sort(abs(Ai[,3]),decreasing = TRUE)
RECON <- read.csv("~/Documents/masterThesis/Data/RECON.csv", sep=";")
View(RECON)
OF
sort
sort(OF)
OF>0
OF<optimizeProb(inflammated)@lp_obj & OF>0
OF[OF<optimizeProb(inflammated)@lp_obj & OF>0,]
OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]
sort(OF[OF<optimizeProb(inflammated)@lp_obj & OF>0])
Ai
View(Ai)
library(devtools)
install_github("gibbslab/exp2flux")
matureAstrocyte_Model <- readSBMLmod("Results/matureAstrocyte.xml")
# Adding Palmitate
lowbnd(matureAstrocyte_Model)[react_id(matureAstrocyte_Model) == 'EX_hdca(e)'] <- -0.208
uppbnd(matureAstrocyte_Model)[react_id(matureAstrocyte_Model) == 'EX_hdca(e)'] <- -0.208
# ProInflamatoryReactions
healthy <- readSBMLmod("Results/matureAstrocyte.xml")
inflammated <- matureAstrocyte_Model
fD <- fluxDifferences(healthy,inflammated,0)
fD <- fD[fD[,3]!=0,]
GPR <- NULL
for (i in rownames(fD)){
GPR <- c(GPR,healthy@gpr[healthy@react_id%in%i])
}
fD <- fD[nchar(GPR)>0,]
OF <- NULL
for(reaction in rownames(fD)){
lb <- lowbnd(inflammated)[react_id(inflammated) == reaction]
ub <- uppbnd(inflammated)[react_id(inflammated) == reaction]
lowbnd(inflammated)[react_id(inflammated) == reaction] <- 0
uppbnd(inflammated)[react_id(inflammated) == reaction] <- 0
OF <- c(OF,optimizeProb(inflammated)@lp_obj)
lowbnd(inflammated)[react_id(inflammated) == reaction] <- lb
uppbnd(inflammated)[react_id(inflammated) == reaction] <- ub
}
Ai <- fD[OF<optimizeProb(inflammated)@lp_obj & OF>0,]
OF[[OF<optimizeProb(inflammated)@lp_obj & OF>0,]]
OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]
OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]/(optimizeProb(inflammated)@lp_obj)
(OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]/(optimizeProb(inflammated)@lp_obj)-1)
round((OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]/(optimizeProb(inflammated)@lp_obj)-1),1)
round((OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]/(optimizeProb(inflammated)@lp_obj)-1),2)
round((OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]/(optimizeProb(inflammated)@lp_obj)-1),3)
round((OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]/(optimizeProb(inflammated)@lp_obj)-1),3)*100
Change <- round((OF[OF<optimizeProb(inflammated)@lp_obj & OF>0.1]/(optimizeProb(inflammated)@lp_obj)-1),3)*100
Change
Change <- round((OF[OF<optimizeProb(inflammated)@lp_obj & OF>0]/(optimizeProb(inflammated)@lp_obj)-1),3)*100
Ai <- cbind(Ai,Change)
View(Ai)
Change!=0
Change!=0 & Change!=-100
Ai[Change!=0 & Change!=-100,]
Ai <- Ai[Change!=0 & Change!=-100,]
View(Ai)
View(RECON)
View(RECON)
View(RECON)
View(RECON)
