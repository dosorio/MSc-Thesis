r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " --> ")
}else{
reactant <- sub("(.*) <=> (.*)","\\1",reaction)
products <- sub("(.*) <=> (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " <==> ")
}
}
sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
reactions<-sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
reactions[39]
reactions[40]
gsub("\\[s\\]",reaction)
reaction
gsub("\\[s\\]","",reaction)
gsub("\\[s\\]","\\[x\\]",reaction)
setwd("~/Dropbox/Maestría Bioinformática/Tesis de Maestría/")
#source("https://bioconductor.org/biocLite.R")
#biocLite("DESeq")
#biocLite("ReactomePA")
#biocLite("KEGGREST")
#biocLite("reactome.db")
#biocLite("UniProt.ws")
#biocLite("org.Hs.eg.db")
# require(DESeq)
# require(edgeR)
require(caret)
# require(KEGGREST)
require(reactome.db)
require(UniProt.ws)
require(ReactomePA)
# Lectura FPKM astrocitos 21 - 63 yo
Astrocyte <-read.csv("Data/GSE73721.csv",row.names = "Gene")[,c(18:26)]
# Eliminando genes que no varian expresión en ningun tiempo (ruido basal)
ActiveGenes<-Astrocyte[-nearZeroVar(t(Astrocyte)),]
# Basandome en el FPKM (anotando nuevamente), busco cuales son diferencialmente expresados (mayor expresión en >40) usando prueba t
DE<-NULL
for(i in 1:dim(ActiveGenes)[1]){
DE[i]<-try(t.test(t(ActiveGenes)[,i]~c(rep('A',3),rep('B',6)), alternative="less")$p.value,silent = TRUE)
}
# Identifico genes diferencialmente expresados usando p<0.5
DE<-as.numeric(DE)<0.05
table(DE)
# Extraigo ID's genes en diferentes bases de datos
Human<-(UniProt.ws(taxId=9606))
HSA<-select(Human,keys=toupper(unique(rownames(ActiveGenes))),columns = c("ENSEMBL","ENTREZ_GENE","ENTRY-NAME","KO","KEGG","EC","REACTOME","PROTEIN-NAMES"),keytype ="GENECARDS")
MatureAstrocyte<- select(Human,keys=toupper(unique(rownames(ActiveGenes[DE,]))),columns = c("ENSEMBL","ENTREZ_GENE","ENTRY-NAME","KO","KEGG","EC","REACTOME","PROTEIN-NAMES"),keytype ="GENECARDS")
# Excluyo proteínas con actividad enzimática
EC<-HSA[!is.na(HSA$ENSEMBL),]
# Extraigo rutas metabolicas involucradas
AstrocyteMetabolism<-enrichPathway(unique(na.omit(HSA$ENTREZ_GENE)),organism = "human",readable = TRUE)
ResumenAstrocyte<-summary(AstrocyteMetabolism)
# Extrayendo ENSEMBL ID's
ENSEMBL<-unique(unlist(strsplit(EC$ENSEMBL,";")))
# Extrayendo de HMR
HMR<-read.csv("Data/rxn_HMRdatabase2_00.csv",sep = ";")
RXN<-NULL
for (i in 1:length(ENSEMBL)){
RXN<-c(RXN,as.vector(HMR[grep(ENSEMBL[i],HMR$GENE.ASSOCIATION),2]))
}
# Reconstrucción Borrador
Astrocyte_DRAFT<-unique(HMR[HMR$RXNID%in%RXN,])
Astrocyte_DRAFT<-Astrocyte_DRAFT[!grepl("[[:digit:]]\\.[[:digit:]]",Astrocyte_DRAFT$EQUATION),]
# Convirtiendo a Sybil
cobra2sybil<-function(reaction){
coeficients <- function(met) {
regmatches(met, gregexpr('^[0-9,.]', met))
}
if(grepl("[[:blank:]]=>[[:blank:]]",reaction)){
reactant <- sub("(.*) => (.*)","\\1",reaction)
products <- sub("(.*) => (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " --> ")
}else{
reactant <- sub("(.*) <=> (.*)","\\1",reaction)
products <- sub("(.*) <=> (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " <==> ")
}
gsub("\\[s\\]","\\[e\\]",reaction)
}
reactions<-sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
reactions
cobra2sybil<-function(reaction){
coeficients <- function(met) {
regmatches(met, gregexpr('^[0-9,.]', met))
}
if(grepl("[[:blank:]]=>[[:blank:]]",reaction)){
reactant <- sub("(.*) => (.*)","\\1",reaction)
products <- sub("(.*) => (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " --> ")
}else{
reactant <- sub("(.*) <=> (.*)","\\1",reaction)
products <- sub("(.*) <=> (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " <==> ")
}
gsub("\\[s\\]","\\[e\\]",reaction)
}
reactions<-sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
reactions
cobra2sybil<-function(reaction){
coeficients <- function(met) {
regmatches(met, gregexpr('^[0-9,.]', met))
}
if(grepl("[[:blank:]]=>[[:blank:]]",reaction)){
reactant <- sub("(.*) => (.*)","\\1",reaction)
products <- sub("(.*) => (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " --> ")
}else{
reactant <- sub("(.*) <=> (.*)","\\1",reaction)
products <- sub("(.*) <=> (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " <==> ")
}
}
reactions<-sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
reactions
gsub("\\[s\\]","\\[e\\]",reaction)
cobra2sybil<-function(reaction){
coeficients <- function(met) {
regmatches(met, gregexpr('^[0-9,.]', met))
}
if(grepl("[[:blank:]]=>[[:blank:]]",reaction)){
reactant <- sub("(.*) => (.*)","\\1",reaction)
products <- sub("(.*) => (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
reaction <- paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " --> ")
}else{
reactant <- sub("(.*) <=> (.*)","\\1",reaction)
products <- sub("(.*) <=> (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
reaction <- paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " <==> ")
}
gsub("\\[s\\]","\\[e\\]",reaction)
}
reactions<-sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
reactions
library(sybil)
mpath <- system.file(package = "sybil", "extdata")
mpath
library(sybil)
?sybil
require(caret)
# require(KEGGREST)
require(reactome.db)
require(UniProt.ws)
require(ReactomePA)
# Lectura FPKM astrocitos 21 - 63 yo
Astrocyte <-read.csv("Data/GSE73721.csv",row.names = "Gene")[,c(18:26)]
# Eliminando genes que no varian expresión en ningun tiempo (ruido basal)
ActiveGenes<-Astrocyte[-nearZeroVar(t(Astrocyte)),]
# Basandome en el FPKM (anotando nuevamente), busco cuales son diferencialmente expresados (mayor expresión en >40) usando prueba t
DE<-NULL
for(i in 1:dim(ActiveGenes)[1]){
DE[i]<-try(t.test(t(ActiveGenes)[,i]~c(rep('A',3),rep('B',6)), alternative="less")$p.value,silent = TRUE)
}
# Identifico genes diferencialmente expresados usando p<0.5
DE<-as.numeric(DE)<0.05
table(DE)
# Extraigo ID's genes en diferentes bases de datos
Human<-(UniProt.ws(taxId=9606))
HSA<-select(Human,keys=toupper(unique(rownames(ActiveGenes))),columns = c("ENSEMBL","ENTREZ_GENE","ENTRY-NAME","KO","KEGG","EC","REACTOME","PROTEIN-NAMES"),keytype ="GENECARDS")
MatureAstrocyte<- select(Human,keys=toupper(unique(rownames(ActiveGenes[DE,]))),columns = c("ENSEMBL","ENTREZ_GENE","ENTRY-NAME","KO","KEGG","EC","REACTOME","PROTEIN-NAMES"),keytype ="GENECARDS")
Astrocyte <-read.csv("Data/GSE73721.csv",row.names = "Gene")[,c(18:26)]
setwd("~/Dropbox/Maestría Bioinformática/Tesis de Maestría/")
Astrocyte <-read.csv("Data/GSE73721.csv",row.names = "Gene")[,c(18:26)]
# Eliminando genes que no varian expresión en ningun tiempo (ruido basal)
ActiveGenes<-Astrocyte[-nearZeroVar(t(Astrocyte)),]
# Basandome en el FPKM (anotando nuevamente), busco cuales son diferencialmente expresados (mayor expresión en >40) usando prueba t
DE<-NULL
for(i in 1:dim(ActiveGenes)[1]){
DE[i]<-try(t.test(t(ActiveGenes)[,i]~c(rep('A',3),rep('B',6)), alternative="less")$p.value,silent = TRUE)
}
# Identifico genes diferencialmente expresados usando p<0.5
DE<-as.numeric(DE)<0.05
table(DE)
# Extraigo ID's genes en diferentes bases de datos
Human<-(UniProt.ws(taxId=9606))
HSA<-select(Human,keys=toupper(unique(rownames(ActiveGenes))),columns = c("ENSEMBL","ENTREZ_GENE","ENTRY-NAME","KO","KEGG","EC","REACTOME","PROTEIN-NAMES"),keytype ="GENECARDS")
View(HSA)
MatureAstrocyte<- select(Human,keys=toupper(unique(rownames(ActiveGenes[DE,]))),columns = c("ENSEMBL","ENTREZ_GENE","ENTRY-NAME","KO","KEGG","EC","REACTOME","PROTEIN-NAMES"),keytype ="GENECARDS")
EC<-HSA[!is.na(HSA$ENSEMBL),]
# Extraigo rutas metabolicas involucradas en la diferenciación de astrocito maduro
AstrocyteMetabolism<-enrichPathway(unique(na.omit(MatureAstrocyte$ENTREZ_GENE)),organism = "human",readable = TRUE)
summary(AstrocyteMetabolism)
AstrocyteMetabolism<-enrichPathway(unique(na.omit(MatureAstrocyte$ENTREZ_GENE)),organism = "human",readable = TRUE,pvalueCutoff = 1)
MatureAstrocyte$ENTREZ_GENE
EC<-HSA[!is.na(HSA$ENSEMBL),]
# Extraigo rutas metabolicas involucradas en la diferenciación de astrocito maduro
AstrocyteMetabolism<-enrichPathway(unique(na.omit(HSA$ENTREZ_GENE)),organism = "human",readable = TRUE,pvalueCutoff = 1)
AstrocyteMetabolism<-enrichPathway(unique(na.omit(HSA$ENTREZ_GENE)),organism = "human",readable = TRUE,pvalueCutoff = 0.05)
ResumenAstrocyte<-summary(AstrocyteMetabolism)
ResumenAstrocyte
View(ResumenAstrocyte)
ENSEMBL<-unique(unlist(strsplit(EC$ENSEMBL,";")))
HMR<-read.csv("Data/rxn_HMRdatabase2_00.csv",sep = ";")
RXN<-NULL
for (i in 1:length(ENSEMBL)){
RXN<-c(RXN,as.vector(HMR[grep(ENSEMBL[i],HMR$GENE.ASSOCIATION),2]))
}
}
RXN
Astrocyte_DRAFT<-unique(HMR[HMR$RXNID%in%sort(RXN),])
Astrocyte_DRAFT<-Astrocyte_DRAFT[!grepl("[[:digit:]]\\.[[:digit:]]",Astrocyte_DRAFT$EQUATION),]
Astrocyte_DRAFT<-unique(HMR[HMR$RXNID%in%sort(RXN),])
Astrocyte_DRAFT<-Astrocyte_DRAFT[!grepl("[[:digit:]]\\.[[:digit:]]",Astrocyte_DRAFT$EQUATION),]
View(Astrocyte_DRAFT)
NOA<-unique(HMR[!(HMR$RXNID%in%sort(RXN)),])
View(NOA)
rm(NOA)
rm(i)
save.image("~/Dropbox/Maestría Bioinformática/Tesis de Maestría/Data/DRAFT.RData")
Astrocyte_DRAFT<-unique(HMR[HMR$RXNID%in%sort(RXN),])
Astrocyte_DRAFT<-Astrocyte_DRAFT[!grepl("[[:digit:]]\\.[[:digit:]]",Astrocyte_DRAFT$EQUATION),]
# Convirtiendo a Sybil
cobra2sybil<-function(reaction){
coeficients <- function(met) {
regmatches(met, gregexpr('^[0-9,.]', met))
}
if(grepl("[[:blank:]]=>[[:blank:]]",reaction)){
reactant <- sub("(.*) => (.*)","\\1",reaction)
products <- sub("(.*) => (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
reaction <- paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " --> ")
}else{
reactant <- sub("(.*) <=> (.*)","\\1",reaction)
products <- sub("(.*) <=> (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
reaction <- paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " <==> ")
}
gsub("\\[s\\]","\\[e\\]",reaction)
}
reactions<-sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
names <- Astrocyte_DRAFT$RXNID
length(names)
length(reactions)
Astrocyte_DRAFT$NAME
View(Astrocyte_DRAFT)
cbind(names,names,reactions)
AstrocyteModel<-cbind(names,names,reactions)
View(AstrocyteModel)
Astrocyte_DRAFT$EQUATION[17]
coeficients <- function(met) {
regmatches(met, gregexpr('^[0-9]+[[:blank:]]', met))
}
cobra2sybil<-function(reaction){
coeficients <- function(met) {
regmatches(met, gregexpr('^[0-9]+[[:blank:]]', met))
}
if(grepl("[[:blank:]]=>[[:blank:]]",reaction)){
reactant <- sub("(.*) => (.*)","\\1",reaction)
products <- sub("(.*) => (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
reaction <- paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " --> ")
}else{
reactant <- sub("(.*) <=> (.*)","\\1",reaction)
products <- sub("(.*) <=> (.*)","\\2",reaction)
reactant <- strsplit(reactant," + ",fixed = TRUE)[[1]]
products <- strsplit(products," + ",fixed = TRUE)[[1]]
reactant <- gsub("\\+","",reactant)
products <- gsub("\\+","",products)
r_coefic <- as.numeric(sapply(reactant, coeficients))
r_coefic[is.na(r_coefic)]<-1
p_coefic <- as.numeric(sapply(products, coeficients))
p_coefic[is.na(p_coefic)]<-1
reactant <- gsub("^[[:digit:]][[:blank:]]","",reactant)
products <- gsub("^[[:digit:]][[:blank:]]","",products)
reactant <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=r_coefic, m=reactant)
products <- mapply(function(c,m){paste("(",c,") ", m, sep = "")}, c=p_coefic, m=products)
reaction <- paste(paste0(reactant,collapse = " + "), paste0(products,collapse = " + "),sep = " <==> ")
}
gsub("\\[s\\]","\\[e\\]",reaction)
}
cobra2sybil(Astrocyte_DRAFT$EQUATION[17])
reactions<-sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
names <- Astrocyte_DRAFT$RXNID
AstrocyteModel<-cbind(names,names,reactions)
View(AstrocyteModel)
Astrocyte_DRAFT$EQUATION[39]
names <- Astrocyte_DRAFT$RXNID
names
AstrocyteModel<-cbind(names,names,reactions)
View(AstrocyteModel)
AstrocyteModel<-cbind(as.character(names),as.character(names),reactions)
View(AstrocyteModel)
AstrocyteModel<-cbind(as.character(names),as.character(names),as.character(reactions))
View(AstrocyteModel)
library(sybil)
?sybil
mpath <- system.file(package = "sybil", "extdata")
reversible <- function(reaction){
if(grepl("[[:blank:]]-->[[:blank:]]",reaction)){
return("irreversible")
} else {
return("irreversible")
}
}
sapply(reactions,reversible)
as.vector(sapply(reactions,reversible))
reversible <- function(reaction){
if(grepl("[[:blank:]]-->[[:blank:]]",reaction)){
return("reversible")
} else {
return("irreversible")
}
}
as.vector(sapply(reactions,reversible))
rever <- as.vector(sapply(reactions,reversible))
AstrocyteModel<-cbind(as.character(names),as.character(names),as.character(reactions),as.character(rever))
View(AstrocyteModel)
reversible <- function(reaction){
if(grepl("[[:blank:]]-->[[:blank:]]",reaction)){
return("irreversible")
} else {
return("reversible")
}
}
reactions<-sapply(Astrocyte_DRAFT$EQUATION,cobra2sybil)
names <- Astrocyte_DRAFT$RXNID
rever <- as.vector(sapply(reactions,reversible))
AstrocyteModel<-cbind(as.character(names),as.character(names),as.character(reactions),as.character(rever))
View(AstrocyteModel)
regmatches(reaction, gregexpr('\\[[[:alpha:]]\\]', reaction))
reaction<-Astrocyte_DRAFT$EQUATION[1]
regmatches(reaction, gregexpr('\\[[[:alpha:]]\\]', reaction))
comp<-regmatches(reaction, gregexpr('\\[[[:alpha:]]+\\]', reaction))
compartment <- function(reaction){
comp<-regmatches(reaction, gregexpr('\\[[[:alpha:]]+\\]', reaction))
}
comp
comp<-regmatches(reaction, gregexpr('\\[[[:alpha:]]+\\]', reaction))[[1]]
comp
comp<-gsub("\\[","",comp)
comp<-gsub("\\]","",comp)
comp
unique(comp)
paste(unique(comp),", ")
paste(unique(comp),collapse = ",")
paste(unique(comp),collapse = ", ")
compartment <- function(reaction){
comp<-regmatches(reaction, gregexpr('\\[[[:alpha:]]+\\]', reaction))[[1]]
comp<-gsub("\\[","",comp)
comp<-gsub("\\]","",comp)
paste(unique(comp),collapse = ", ")
}
sapply(Astrocyte_DRAFT$EQUATION,compartment)
comp<- sapply(reactions,compartment)
comp
as.vector(comp)
comp<- as.vector(sapply(reactions,compartment))
unique(comp)
compartment <- function(reaction){
comp<-regmatches(reaction, gregexpr('\\[[[:alpha:]]\\]', reaction))[[1]]
comp<-gsub("\\[","",comp)
comp<-gsub("\\]","",comp)
paste(unique(comp),collapse = ", ")
}
comp<- as.vector(sapply(reactions,compartment))
comp
unique(comp)
AstrocyteModel<-cbind(as.character(names),as.character(names),as.character(reactions),as.character(rever),as.character(comp))
View(AstrocyteModel)
AstrocyteModel<-cbind(as.character(names),as.character(names),as.character(reactions),as.character(rever),as.character(comp),-1000)
View(Astrocyte_DRAFT)
View(AstrocyteModel)
AstrocyteModel<-cbind(as.character(names),as.character(names),as.character(reactions),as.character(rever),as.character(comp),-1000,1000)
save.image("~/Desktop/Modelo.RData")
AstrocyteModel<-cbind(as.character(names),as.character(names),as.character(reactions),as.character(rever),as.character(comp),-1000,1000,"","")
View(AstrocyteModel)
